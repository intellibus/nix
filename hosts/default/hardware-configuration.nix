# This file is generated by nixos-generate-config(8).
# You should copy your actual hardware-configuration.nix here.
# Run 'sudo nixos-generate-config' to generate this file.

{ config, lib, pkgs, modulesPath, ... }:

let
  # Check if we're in a CI environment
  isCIBuild = builtins.getEnv "NIXOS_CI_BUILD" == "true";
in
{
  imports =
    if isCIBuild then [ ]
    else [ (modulesPath + "/installer/scan/not-detected.nix") ];

  # PLACEHOLDER: This is a template hardware configuration
  # You need to replace this with your actual hardware configuration
  # generated by 'sudo nixos-generate-config'
  # 
  # To generate proper hardware config:
  # 1. Boot from NixOS installer
  # 2. Run: sudo nixos-generate-config --root /mnt
  # 3. Copy /mnt/etc/nixos/hardware-configuration.nix to this file
  #
  # For CI builds, use minimal safe defaults that won't break the build

  # Boot configuration - conditionally set based on CI environment
  boot = {
    initrd.availableKernelModules = if isCIBuild then [ ] else [ "xhci_pci" "ahci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
    initrd.kernelModules = [ ];
    kernelModules = if isCIBuild then [ ] else [ "kvm-intel" ];
    extraModulePackages = [ ];

    # Kernel module stability improvements - only in non-CI environments
    kernel.sysctl = lib.mkIf (!isCIBuild) {
      "kernel.modules_disabled" = 0;
    };

    # Boot loader configuration - disabled in CI
    loader.systemd-boot.enable = !isCIBuild;
    loader.efi.canTouchEfiVariables = !isCIBuild;
  };

  # Filesystem configuration - conditionally set based on CI environment  
  fileSystems = if isCIBuild then { } else {
    "/" = {
      device = "/dev/sda1"; # Update with your actual root device
      fsType = "ext4";
    };

    "/boot" = {
      device = "/dev/sda2"; # Update with your actual boot device  
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };
  };

  swapDevices = if isCIBuild then [ ] else [ ];

  # Enables DHCP on each ethernet and wireless interface.
  networking.useDHCP = lib.mkDefault (!isCIBuild);

  # Only set hostPlatform for non-CI builds to avoid Linux-specific kernel module evaluation
  nixpkgs.hostPlatform = lib.mkIf (!isCIBuild) (lib.mkDefault "x86_64-linux");
}
